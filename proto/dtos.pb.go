// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.23.4
// source: proto/dtos.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Usuario struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Nome      string  `protobuf:"bytes,2,opt,name=nome,proto3" json:"nome,omitempty"`
	Idade     int32   `protobuf:"varint,3,opt,name=idade,proto3" json:"idade,omitempty"`
	Playlists []int32 `protobuf:"varint,4,rep,packed,name=playlists,proto3" json:"playlists,omitempty"`
}

func (x *Usuario) Reset() {
	*x = Usuario{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Usuario) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Usuario) ProtoMessage() {}

func (x *Usuario) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Usuario.ProtoReflect.Descriptor instead.
func (*Usuario) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{0}
}

func (x *Usuario) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Usuario) GetNome() string {
	if x != nil {
		return x.Nome
	}
	return ""
}

func (x *Usuario) GetIdade() int32 {
	if x != nil {
		return x.Idade
	}
	return 0
}

func (x *Usuario) GetPlaylists() []int32 {
	if x != nil {
		return x.Playlists
	}
	return nil
}

type Musica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Nome    string `protobuf:"bytes,2,opt,name=nome,proto3" json:"nome,omitempty"`
	Artista string `protobuf:"bytes,3,opt,name=artista,proto3" json:"artista,omitempty"`
}

func (x *Musica) Reset() {
	*x = Musica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Musica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Musica) ProtoMessage() {}

func (x *Musica) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Musica.ProtoReflect.Descriptor instead.
func (*Musica) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{1}
}

func (x *Musica) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Musica) GetNome() string {
	if x != nil {
		return x.Nome
	}
	return ""
}

func (x *Musica) GetArtista() string {
	if x != nil {
		return x.Artista
	}
	return ""
}

type Playlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UsuarioId int32   `protobuf:"varint,2,opt,name=usuario_id,json=usuarioId,proto3" json:"usuario_id,omitempty"`
	Musicas   []int32 `protobuf:"varint,3,rep,packed,name=musicas,proto3" json:"musicas,omitempty"`
}

func (x *Playlist) Reset() {
	*x = Playlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Playlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Playlist) ProtoMessage() {}

func (x *Playlist) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Playlist.ProtoReflect.Descriptor instead.
func (*Playlist) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{2}
}

func (x *Playlist) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Playlist) GetUsuarioId() int32 {
	if x != nil {
		return x.UsuarioId
	}
	return 0
}

func (x *Playlist) GetMusicas() []int32 {
	if x != nil {
		return x.Musicas
	}
	return nil
}

type UsuarioID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *UsuarioID) Reset() {
	*x = UsuarioID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsuarioID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsuarioID) ProtoMessage() {}

func (x *UsuarioID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsuarioID.ProtoReflect.Descriptor instead.
func (*UsuarioID) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{3}
}

func (x *UsuarioID) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type MusicaID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *MusicaID) Reset() {
	*x = MusicaID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicaID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicaID) ProtoMessage() {}

func (x *MusicaID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicaID.ProtoReflect.Descriptor instead.
func (*MusicaID) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{4}
}

func (x *MusicaID) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type PlaylistID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *PlaylistID) Reset() {
	*x = PlaylistID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistID) ProtoMessage() {}

func (x *PlaylistID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistID.ProtoReflect.Descriptor instead.
func (*PlaylistID) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{5}
}

func (x *PlaylistID) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type Resposta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Resposta) Reset() {
	*x = Resposta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resposta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resposta) ProtoMessage() {}

func (x *Resposta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resposta.ProtoReflect.Descriptor instead.
func (*Resposta) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{6}
}

func (x *Resposta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{7}
}

type UsuarioList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usuarios []*Usuario `protobuf:"bytes,1,rep,name=usuarios,proto3" json:"usuarios,omitempty"`
}

func (x *UsuarioList) Reset() {
	*x = UsuarioList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsuarioList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsuarioList) ProtoMessage() {}

func (x *UsuarioList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsuarioList.ProtoReflect.Descriptor instead.
func (*UsuarioList) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{8}
}

func (x *UsuarioList) GetUsuarios() []*Usuario {
	if x != nil {
		return x.Usuarios
	}
	return nil
}

type MusicaList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Musicas []*Musica `protobuf:"bytes,1,rep,name=musicas,proto3" json:"musicas,omitempty"`
}

func (x *MusicaList) Reset() {
	*x = MusicaList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicaList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicaList) ProtoMessage() {}

func (x *MusicaList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicaList.ProtoReflect.Descriptor instead.
func (*MusicaList) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{9}
}

func (x *MusicaList) GetMusicas() []*Musica {
	if x != nil {
		return x.Musicas
	}
	return nil
}

type PlaylistList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playlists []*Playlist `protobuf:"bytes,1,rep,name=playlists,proto3" json:"playlists,omitempty"`
}

func (x *PlaylistList) Reset() {
	*x = PlaylistList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dtos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistList) ProtoMessage() {}

func (x *PlaylistList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistList.ProtoReflect.Descriptor instead.
func (*PlaylistList) Descriptor() ([]byte, []int) {
	return file_proto_dtos_proto_rawDescGZIP(), []int{10}
}

func (x *PlaylistList) GetPlaylists() []*Playlist {
	if x != nil {
		return x.Playlists
	}
	return nil
}

var File_proto_dtos_proto protoreflect.FileDescriptor

var file_proto_dtos_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x22, 0x61,
	0x0a, 0x07, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x64, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x64,
	0x61, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x73, 0x22, 0x46, 0x0a, 0x06, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x75, 0x61, 0x72,
	0x69, 0x6f, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x73, 0x22, 0x1b,
	0x0a, 0x09, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x22, 0x1a, 0x0a, 0x08, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x22, 0x1c, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x44, 0x22, 0x24, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x3e, 0x0a, 0x0b, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x75, 0x61,
	0x72, 0x69, 0x6f, 0x73, 0x22, 0x3a, 0x0a, 0x0a, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x73,
	0x22, 0x42, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x73, 0x32, 0xbe, 0x02, 0x0a, 0x0e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x43, 0x72, 0x69, 0x61, 0x72,
	0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x13, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x1a, 0x14, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73,
	0x74, 0x61, 0x12, 0x38, 0x0a, 0x0a, 0x4c, 0x65, 0x72, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f,
	0x12, 0x15, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73,
	0x75, 0x61, 0x72, 0x69, 0x6f, 0x49, 0x44, 0x1a, 0x13, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x3d, 0x0a, 0x10,
	0x41, 0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x72, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f,
	0x12, 0x13, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73,
	0x75, 0x61, 0x72, 0x69, 0x6f, 0x1a, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x61, 0x72, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x15, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72,
	0x69, 0x6f, 0x49, 0x44, 0x1a, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0b, 0x4c, 0x65,
	0x72, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x11, 0x2e, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xb2, 0x02, 0x0a, 0x0d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x43, 0x72, 0x69, 0x61, 0x72,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x12, 0x12, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f,
	0x61, 0x70, 0x70, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x1a, 0x14, 0x2e, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x61,
	0x12, 0x35, 0x0a, 0x09, 0x4c, 0x65, 0x72, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x12, 0x14, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x61, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x12, 0x3b, 0x0a, 0x0f, 0x41, 0x74, 0x75, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x72, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x12, 0x12, 0x2e, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x1a, 0x14,
	0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x73, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x72, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x61, 0x12, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x49, 0x44, 0x1a, 0x14, 0x2e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x74,
	0x61, 0x12, 0x37, 0x0a, 0x0a, 0x4c, 0x65, 0x72, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x73, 0x12,
	0x11, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xb0, 0x04, 0x0a, 0x0f, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b,
	0x0a, 0x0d, 0x43, 0x72, 0x69, 0x61, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x61, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x50, 0x6f,
	0x72, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x15, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x49, 0x44, 0x1a,
	0x18, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x61, 0x72, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x73, 0x50, 0x6f, 0x72, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x16, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x50, 0x6f, 0x72, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x61, 0x12, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x61, 0x49, 0x44, 0x1a, 0x18, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x4c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x0c, 0x4c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x11,
	0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x18, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x11, 0x41,
	0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f,
	0x61, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x14, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x61,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x42, 0x0a, 0x5a,
	0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_dtos_proto_rawDescOnce sync.Once
	file_proto_dtos_proto_rawDescData = file_proto_dtos_proto_rawDesc
)

func file_proto_dtos_proto_rawDescGZIP() []byte {
	file_proto_dtos_proto_rawDescOnce.Do(func() {
		file_proto_dtos_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dtos_proto_rawDescData)
	})
	return file_proto_dtos_proto_rawDescData
}

var file_proto_dtos_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_dtos_proto_goTypes = []any{
	(*Usuario)(nil),      // 0: musica_app.Usuario
	(*Musica)(nil),       // 1: musica_app.Musica
	(*Playlist)(nil),     // 2: musica_app.Playlist
	(*UsuarioID)(nil),    // 3: musica_app.UsuarioID
	(*MusicaID)(nil),     // 4: musica_app.MusicaID
	(*PlaylistID)(nil),   // 5: musica_app.PlaylistID
	(*Resposta)(nil),     // 6: musica_app.Resposta
	(*Empty)(nil),        // 7: musica_app.Empty
	(*UsuarioList)(nil),  // 8: musica_app.UsuarioList
	(*MusicaList)(nil),   // 9: musica_app.MusicaList
	(*PlaylistList)(nil), // 10: musica_app.PlaylistList
}
var file_proto_dtos_proto_depIdxs = []int32{
	0,  // 0: musica_app.UsuarioList.usuarios:type_name -> musica_app.Usuario
	1,  // 1: musica_app.MusicaList.musicas:type_name -> musica_app.Musica
	2,  // 2: musica_app.PlaylistList.playlists:type_name -> musica_app.Playlist
	0,  // 3: musica_app.UsuarioService.CriarUsuario:input_type -> musica_app.Usuario
	3,  // 4: musica_app.UsuarioService.LerUsuario:input_type -> musica_app.UsuarioID
	0,  // 5: musica_app.UsuarioService.AtualizarUsuario:input_type -> musica_app.Usuario
	3,  // 6: musica_app.UsuarioService.DeletarUsuario:input_type -> musica_app.UsuarioID
	7,  // 7: musica_app.UsuarioService.LerUsuarios:input_type -> musica_app.Empty
	1,  // 8: musica_app.MusicaService.CriarMusica:input_type -> musica_app.Musica
	4,  // 9: musica_app.MusicaService.LerMusica:input_type -> musica_app.MusicaID
	1,  // 10: musica_app.MusicaService.AtualizarMusica:input_type -> musica_app.Musica
	4,  // 11: musica_app.MusicaService.DeletarMusica:input_type -> musica_app.MusicaID
	7,  // 12: musica_app.MusicaService.LerMusicas:input_type -> musica_app.Empty
	2,  // 13: musica_app.PlaylistService.CriarPlaylist:input_type -> musica_app.Playlist
	3,  // 14: musica_app.PlaylistService.ListarPlaylistsPorUsuario:input_type -> musica_app.UsuarioID
	5,  // 15: musica_app.PlaylistService.ListarMusicasPorPlaylist:input_type -> musica_app.PlaylistID
	4,  // 16: musica_app.PlaylistService.ListarPlaylistsPorMusica:input_type -> musica_app.MusicaID
	5,  // 17: musica_app.PlaylistService.LerPlaylist:input_type -> musica_app.PlaylistID
	7,  // 18: musica_app.PlaylistService.LerPlaylists:input_type -> musica_app.Empty
	2,  // 19: musica_app.PlaylistService.AtualizarPlaylist:input_type -> musica_app.Playlist
	5,  // 20: musica_app.PlaylistService.DeletarPlaylist:input_type -> musica_app.PlaylistID
	6,  // 21: musica_app.UsuarioService.CriarUsuario:output_type -> musica_app.Resposta
	0,  // 22: musica_app.UsuarioService.LerUsuario:output_type -> musica_app.Usuario
	6,  // 23: musica_app.UsuarioService.AtualizarUsuario:output_type -> musica_app.Resposta
	6,  // 24: musica_app.UsuarioService.DeletarUsuario:output_type -> musica_app.Resposta
	8,  // 25: musica_app.UsuarioService.LerUsuarios:output_type -> musica_app.UsuarioList
	6,  // 26: musica_app.MusicaService.CriarMusica:output_type -> musica_app.Resposta
	1,  // 27: musica_app.MusicaService.LerMusica:output_type -> musica_app.Musica
	6,  // 28: musica_app.MusicaService.AtualizarMusica:output_type -> musica_app.Resposta
	6,  // 29: musica_app.MusicaService.DeletarMusica:output_type -> musica_app.Resposta
	9,  // 30: musica_app.MusicaService.LerMusicas:output_type -> musica_app.MusicaList
	6,  // 31: musica_app.PlaylistService.CriarPlaylist:output_type -> musica_app.Resposta
	10, // 32: musica_app.PlaylistService.ListarPlaylistsPorUsuario:output_type -> musica_app.PlaylistList
	9,  // 33: musica_app.PlaylistService.ListarMusicasPorPlaylist:output_type -> musica_app.MusicaList
	10, // 34: musica_app.PlaylistService.ListarPlaylistsPorMusica:output_type -> musica_app.PlaylistList
	2,  // 35: musica_app.PlaylistService.LerPlaylist:output_type -> musica_app.Playlist
	10, // 36: musica_app.PlaylistService.LerPlaylists:output_type -> musica_app.PlaylistList
	6,  // 37: musica_app.PlaylistService.AtualizarPlaylist:output_type -> musica_app.Resposta
	6,  // 38: musica_app.PlaylistService.DeletarPlaylist:output_type -> musica_app.Resposta
	21, // [21:39] is the sub-list for method output_type
	3,  // [3:21] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_dtos_proto_init() }
func file_proto_dtos_proto_init() {
	if File_proto_dtos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dtos_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Usuario); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dtos_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Musica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dtos_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Playlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dtos_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UsuarioID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dtos_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MusicaID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dtos_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PlaylistID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dtos_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Resposta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dtos_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dtos_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UsuarioList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dtos_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*MusicaList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dtos_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PlaylistList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dtos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_dtos_proto_goTypes,
		DependencyIndexes: file_proto_dtos_proto_depIdxs,
		MessageInfos:      file_proto_dtos_proto_msgTypes,
	}.Build()
	File_proto_dtos_proto = out.File
	file_proto_dtos_proto_rawDesc = nil
	file_proto_dtos_proto_goTypes = nil
	file_proto_dtos_proto_depIdxs = nil
}
